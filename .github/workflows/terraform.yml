name: "eks-iac"
on:
  push:
    branches:
      - main
      - stage
    paths:
      - terraform/**
  pull_request:
    branches:
      - main
    paths:
      - terraform/**

env:
  AWS_REGION: us-east-1
  EKS_CLUSTER: go-web-app-eks
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  BUCKET_TF_STATE: ${{ secrets.BUCKET_TF_STATE }}

jobs:
  terraform:
    name: "Apply terraform code changes"
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: ./terraform

    steps:
      - name: Checkout source code
        uses: actions/checkout@v4

      - name: Setup terraform with specific version on the runner
        uses: hashicorp/setup-terraform@v3
        # with:
        #   terraform_version: "1.1.7"
    
      - name: Initialize Terraform
        id: init
        run: terraform init -backend-config="bucket=$BUCKET_TF_STATE"

    #   - name: Terraform format
    #     id: fmt
    #     run: terraform fmt -check

      - name: Terraform validate
        id: validate
        run: terraform validate

      - name: Terraform plan
        id: plan
        run: terraform plan -no-color -input=false  -out planfile 
        continue-on-error: true   
    
      - name: Terraform plan status
        if: steps.plan.outcome == 'failure'
        run: exit 1

    #   - name: Terraform apply
    #     id: apple
    #     if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    #     run: terraform destroy -auto-approve -input=false -parallelism=1 planfile

      - name: Terraform destroy
        id: destroy
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        run: terraform destroy -auto-approve -input=false 
      
    #   - name: Configure AWS credentials
    #     uses: aws-actions/configure-aws-credentials@v4
    #     with:
    #       aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
    #       aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    #       aws-region: ${{ env.AWS_REGION }}
    
    #   - name: Get kube config file
    #     id: gitconfig
    #     if: steps.apple.outcome == 'success'
    #     run: aws eks update-kubeconfig --region ${{ env.AWS_REGION }} --name ${{ env.EKS_CLUSTER }}
    
    #   - name: Install Ingress Controller
    #     if: steps.apple.outcome == 'success' && steps.getconfig.outcome == 'success'
    #     run: kubectl apply -f https://raw.githubusercontent.com/kubernetes/ingress-nginx/controller-v1.11.2/deploy/static/provider/aws/deploy.yaml

